{"version":3,"sources":["Main/codemash-logo.png","Main/Header.js","Main/Body.js","Main/SessionModal.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","props","useState","showPrecompilers","onlyFavorites","tags","filter","setFilter","handleFilters","name","e","handleTagsChanged","value","getLink","handleGetLink","useEffect","Grid","Row","only","Column","width","Segment","style","backgroundColor","borderBottom","display","justifyContent","alignItems","Image","src","CodeMashIcon","size","fontSize","color","fontWeight","Form","Group","Field","Checkbox","label","onChange","checked","slider","Popup","content","trigger","Button","icon","onClick","Icon","position","Dropdown","options","multiple","selection","fluid","search","padding","centered","paddingTop","paddingLeft","paddingRight","Body","handleFavoritesChanged","fav","handleSessionDetailsClicked","id","target","classList","contains","segmentStyle","cursor","Fragment","isLoading","Dimmer","active","Loader","stackable","tuesday","length","computer","tablet","mobile","padded","textAlign","map","session","key","title","isFavorite","day","time","room","wednesday","thursday","friday","SessionModal","Transition","visible","Modal","open","onClose","speaker","Content","paddingBottom","description","t","Label","tag","Actions","animated","hidden","App","allSessions","values","setValues","selectedSession","setSelectedSession","favorites","setFavorites","x","some","y","find","z","getDayName","num","a","document","cookie","split","window","location","includes","query","URLSearchParams","favsQuery","get","atob","axios","result","allTags","sessions","data","categories","categoryItems","sessionTags","flat","tagsToAdd","concat","getDay","parseISO","startsAt","format","speakers","init","sessionId","closeModal","newfavorites","handleCloseModal","isModalOpen","className","navigator","clipboard","writeText","origin","toString","btoa","alert","text","index","sort","b","toUpperCase","s","Boolean","hostname","match","ReactDOM","render","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.29b62bc2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/codemash-logo.89a43373.png\";","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Icon, Image, Button, Form, Segment, Popup } from \"semantic-ui-react\";\r\nimport CodeMashIcon from './codemash-logo.png';\r\n\r\nexport default function Header(props) {\r\n    const [filter, setFilter] = useState({ showPrecompilers: true, onlyFavorites: false, tags: [] });\r\n\r\n    const handleFilters = name => e => {\r\n        setFilter({ ...filter, [name]: !filter[name] });\r\n    };\r\n\r\n    const handleTagsChanged = (e, { value }) => {\r\n        setFilter({ ...filter, tags: value });\r\n    };\r\n    \r\n    const getLink = () => {\r\n        props.handleGetLink();                \r\n    };\r\n\r\n    useEffect(() => {\r\n        props.handleFilters(filter);\r\n    },[filter]);\r\n\r\n    return (\r\n        <Grid>\r\n            {/* Desktop */}\r\n            <Grid.Row only=\"computer\">\r\n                <Grid.Column width={16}>\r\n                    <Segment style={{ backgroundColor: \"lightGray\", borderBottom: \"5px solid grey\" }}>\r\n                        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                            <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                                <Image src={CodeMashIcon} size=\"tiny\" />\r\n                                <p style={{ fontSize: \"150%\", color: \"black\", fontWeight: \"bold\" }}>CodeMash 2020 - Session Picker</p>\r\n                            </div>\r\n                            <Form style={{width: \"50%\"}}>\r\n                                <Form.Group style={{justifyContent: \"flex-end\", alignItems: \"center\"}}>\r\n                                    <Form.Field>\r\n                                        <Form.Checkbox\r\n                                            label=\"Show Precompilers\"\r\n                                            onChange={handleFilters(\"showPrecompilers\")}\r\n                                            checked={filter.showPrecompilers}\r\n                                            slider\r\n                                        />\r\n                                    </Form.Field>\r\n                                    <Form.Field>\r\n                                        <Form.Checkbox\r\n                                            label=\"Favorites Only\"\r\n                                            onChange={handleFilters(\"onlyFavorites\")}\r\n                                            checked={filter.onlyFavorites}\r\n                                            slider\r\n                                        />\r\n                                    </Form.Field>\r\n                                    <Form.Field>\r\n                                        <Popup content=\"Share this list!\" trigger={\r\n                                            <Form.Button icon onClick={getLink}>\r\n                                            <Icon color=\"green\" name=\"linkify\" />\r\n                                        </Form.Button>\r\n                                        } position=\"left center\"/>                                        \r\n                                    </Form.Field>\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                    <Form.Field width={16}>\r\n                                        <Form.Dropdown\r\n                                            label=\"Tags:\"\r\n                                            options={props.tags}\r\n                                            onChange={handleTagsChanged}\r\n                                            multiple\r\n                                            selection\r\n                                            fluid\r\n                                            search\r\n                                        />\r\n                                    </Form.Field>\r\n                                </Form.Group>\r\n                            </Form>\r\n                        </div>\r\n                    </Segment>\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n\r\n            {/* Mobile */}\r\n            <Grid.Row only=\"tablet mobile\" style={{padding: 0}} centered>\r\n                <div style={{width: \"100%\"}}>\r\n                    <Segment style={{ backgroundColor: \"lightGray\"}}>\r\n                        <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"space-between\", paddingTop: \"15px\" }}>\r\n                            <Image src={CodeMashIcon} size=\"mini\" />\r\n                            <p style={{ fontSize: \"125%\", color: \"black\", fontWeight: \"bold\" }}>CodeMash 2020 - Session Picker</p>\r\n                            <Button icon onClick={getLink}>\r\n                                <Icon color=\"green\" name=\"linkify\" />\r\n                            </Button>\r\n                        </div>\r\n                    </Segment>\r\n                </div>\r\n            </Grid.Row>\r\n            <Grid.Row only=\"tablet mobile\" style={{padding: 0}}>\r\n            <div style={{width: \"100%\"}}>\r\n                    <Segment style={{ backgroundColor: \"lightGray\", borderBottom: \"5px solid grey\", paddingLeft: \"25px\", paddingRight: \"25px\" }}>\r\n                        <Form>\r\n                            <Form.Group style={{justifyContent: \"space-between\"}}>\r\n                                <Form.Field>\r\n                                    <Form.Checkbox\r\n                                        label=\"Show Precompilers\"\r\n                                        onChange={handleFilters(\"showPrecompilers\")}\r\n                                        checked={filter.showPrecompilers}\r\n                                        slider\r\n                                    />\r\n                                </Form.Field>\r\n                                <Form.Field>\r\n                                    <Form.Checkbox\r\n                                        label=\"Favorites Only\"\r\n                                        onChange={handleFilters(\"onlyFavorites\")}\r\n                                        checked={filter.onlyFavorites}\r\n                                        slider\r\n                                    />\r\n                                </Form.Field>\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                <Form.Field width={16}>\r\n                                    <Form.Dropdown\r\n                                        label=\"Tags:\"\r\n                                        options={props.tags}\r\n                                        onChange={handleTagsChanged}\r\n                                        multiple\r\n                                        selection\r\n                                        fluid\r\n                                        search\r\n                                    />\r\n                                </Form.Field>\r\n                            </Form.Group>\r\n                        </Form>\r\n                    </Segment>\r\n                </div>\r\n            </Grid.Row>\r\n        </Grid>\r\n    )\r\n};\r\n","import React from \"react\";\r\nimport { Grid, Icon, Dimmer, Loader, Segment } from \"semantic-ui-react\";\r\n\r\nexport default function Body(props) {\r\n    const handleFavoritesChanged = (fav) => {\r\n        props.handleFavoritesChanged(fav);\r\n    };\r\n\r\n    const handleSessionDetailsClicked = id => ({target}) => {\r\n        // Ignore the icon\r\n        if (!target.classList.contains(\"heart\"))\r\n            props.handleSessionDetailsClicked(id);\r\n    };\r\n\r\n    const segmentStyle = {\r\n        color: \"white\",\r\n        backgroundColor: \"#111\",        \r\n        width: \"100%\",\r\n        cursor: \"pointer\"\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                props.isLoading ?\r\n                    <Dimmer active>\r\n                        <Loader />\r\n                    </Dimmer>\r\n                    :\r\n                    <Grid style={{ paddingRight: \"50px\", paddingLeft: \"50px\" }} stackable>\r\n                        <Grid.Row>\r\n                            {\r\n                                props.tuesday.length > 0 ?\r\n                                    <Grid.Column computer={4} tablet={16} mobile={16}>\r\n                                        <Grid padded>\r\n                                            <Grid.Row>\r\n                                                <Grid.Column textAlign=\"center\">\r\n                                                    <p style={{ fontSize: \"125%\", color: \"white\" }}>Tuesday (PreCompilers)</p>\r\n                                                </Grid.Column>\r\n                                            </Grid.Row>\r\n                                            {\r\n                                                props.tuesday.map(session =>\r\n                                                    <Segment key={session.id} style={segmentStyle} onClick={handleSessionDetailsClicked(session.id)}>\r\n                                                        <Grid.Row key={session.id}>\r\n                                                            <Grid.Column width={16}>\r\n                                                                <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"space-between\" }}>\r\n                                                                    <div style={{ fontSize: \"115%\" }}>\r\n                                                                        {session.title}\r\n                                                                    </div>\r\n                                                                    <div style={{paddingLeft: \"5px\"}}>\r\n                                                                        <Icon name=\"heart\" color={session.isFavorite ? \"red\" : \"grey\"} style={{ cursor: \"pointer\" }} onClick={() => { handleFavoritesChanged(session.id) }} />\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                                <div style={{ display: \"flex\", justifyContent: \"space-between\", paddingTop: \"10px\", alignItems: \"center\", color: \"#21ba45\" }}>\r\n                                                                    <div>\r\n                                                                        {`${session.day} - ${session.time}`}\r\n                                                                    </div>\r\n                                                                    <div>\r\n                                                                        {session.room}\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </Grid.Column>\r\n                                                        </Grid.Row>\r\n                                                    </Segment>\r\n                                                )\r\n                                            }\r\n                                        </Grid>\r\n                                    </Grid.Column>\r\n                                    : null\r\n                            }\r\n                            {\r\n                                props.tuesday.length > 0 ?\r\n                                    <Grid.Column computer={4} tablet={16} mobile={16}>\r\n                                        <Grid padded>\r\n                                            <Grid.Row>\r\n                                                <Grid.Column textAlign=\"center\">\r\n                                                    <p style={{ fontSize: \"125%\", color: \"white\" }}>Wednesday (PreCompilers)</p>\r\n                                                </Grid.Column>\r\n                                            </Grid.Row>\r\n                                            {\r\n                                                props.wednesday.map(session =>\r\n                                                    <Segment key={session.id} style={segmentStyle} onClick={handleSessionDetailsClicked(session.id)}>\r\n                                                        <Grid.Row key={session.id}>\r\n                                                            <Grid.Column width={16}>\r\n                                                                <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"space-between\" }}>\r\n                                                                    <div style={{ fontSize: \"115%\" }}>\r\n                                                                        {session.title}\r\n                                                                    </div>\r\n                                                                    <div style={{paddingLeft: \"5px\"}}>\r\n                                                                        <Icon name=\"heart\" color={session.isFavorite ? \"red\" : \"grey\"} style={{ cursor: \"pointer\" }} onClick={() => { handleFavoritesChanged(session.id) }} />\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                                <div style={{ display: \"flex\", justifyContent: \"space-between\", paddingTop: \"10px\", alignItems: \"center\", color: \"#21ba45\" }}>\r\n                                                                    <div>\r\n                                                                        {`${session.day} - ${session.time}`}\r\n                                                                    </div>\r\n                                                                    <div>\r\n                                                                        {session.room}\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </Grid.Column>\r\n                                                        </Grid.Row>\r\n                                                    </Segment>\r\n                                                )\r\n                                            }\r\n                                        </Grid>\r\n                                    </Grid.Column>\r\n                                    : null\r\n                            }\r\n                            <Grid.Column computer={props.tuesday.length > 0 ? 4 : 8} tablet={16} mobile={16}>\r\n                                <Grid padded>\r\n                                    <Grid.Row>\r\n                                        <Grid.Column textAlign=\"center\">\r\n                                            <p style={{ fontSize: \"125%\", color: \"white\" }}>Thursday</p>\r\n                                        </Grid.Column>\r\n                                    </Grid.Row>\r\n                                    {\r\n                                        props.thursday.map(session =>\r\n                                            <Segment key={session.id} style={segmentStyle} onClick={handleSessionDetailsClicked(session.id)}>\r\n                                                <Grid.Row key={session.id}>\r\n                                                    <Grid.Column width={16}>\r\n                                                        <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"space-between\" }}>\r\n                                                            <div style={{ fontSize: \"115%\" }}>\r\n                                                                {session.title}\r\n                                                            </div>\r\n                                                            <div style={{paddingLeft: \"5px\"}}>\r\n                                                                <Icon name=\"heart\" color={session.isFavorite ? \"red\" : \"grey\"} style={{ cursor: \"pointer\" }} onClick={() => { handleFavoritesChanged(session.id) }} />\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div style={{ display: \"flex\", justifyContent: \"space-between\", paddingTop: \"10px\", alignItems: \"center\", color: \"#21ba45\" }}>\r\n                                                            <div>\r\n                                                                {`${session.day} - ${session.time}`}\r\n                                                            </div>\r\n                                                            <div>\r\n                                                                {session.room}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </Grid.Column>\r\n                                                </Grid.Row>\r\n                                            </Segment>\r\n                                        )\r\n                                    }\r\n                                </Grid>\r\n                            </Grid.Column>\r\n                            <Grid.Column computer={props.tuesday.length > 0 ? 4 : 8} tablet={16} mobile={16}>\r\n                                <Grid padded>\r\n                                    <Grid.Row>\r\n                                        <Grid.Column textAlign=\"center\">\r\n                                            <p style={{ fontSize: \"125%\", color: \"white\" }}>Friday</p>\r\n                                        </Grid.Column>\r\n                                    </Grid.Row>\r\n                                    {\r\n                                        props.friday.map(session =>\r\n                                            <Segment key={session.id} style={segmentStyle} onClick={handleSessionDetailsClicked(session.id)}>\r\n                                                <Grid.Row key={session.id}>\r\n                                                    <Grid.Column width={16}>\r\n                                                        <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"space-between\" }}>\r\n                                                            <div style={{ fontSize: \"115%\" }}>\r\n                                                                {session.title}\r\n                                                            </div>\r\n                                                            <div style={{paddingLeft: \"5px\"}}>\r\n                                                                <Icon name=\"heart\" color={session.isFavorite ? \"red\" : \"grey\"} style={{ cursor: \"pointer\" }} onClick={() => { handleFavoritesChanged(session.id) }} />\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div style={{ display: \"flex\", justifyContent: \"space-between\", paddingTop: \"10px\", alignItems: \"center\", color: \"#21ba45\" }}>\r\n                                                            <div>\r\n                                                                {`${session.day} - ${session.time}`}\r\n                                                            </div>\r\n                                                            <div>\r\n                                                                {session.room}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </Grid.Column>\r\n                                                </Grid.Row>\r\n                                            </Segment>\r\n                                        )\r\n                                    }\r\n                                </Grid>\r\n                            </Grid.Column>\r\n                        </Grid.Row>\r\n                    </Grid>\r\n            }\r\n        </React.Fragment>\r\n    );\r\n};","import React from \"react\";\r\nimport { Modal, Label, Transition, Button, Icon } from \"semantic-ui-react\";\r\n\r\nexport default function SessionModal(props) {\r\n    const handleFavoriteClicked = () => {\r\n        props.handleFavoritesChanged(props.session.id, true);\r\n    };\r\n    \r\n    return (\r\n        <Transition visible={props.visible}>\r\n            <Modal open={props.visible} onClose={props.onClose}>\r\n                <Modal.Header>\r\n                    <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                        <div>\r\n                            {props.session.title}\r\n                        </div>\r\n                        <div>\r\n                            {props.session.speaker}\r\n                        </div>\r\n                    </div>\r\n                </Modal.Header>\r\n                <Modal.Content>\r\n                    <div style={{ color: \"black\", paddingTop: \"10px\", paddingBottom: \"10px\", fontSize: \"110%\" }}>\r\n                        {`${props.session.description}`}\r\n                    </div>\r\n                    <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n                        {\r\n                            props.session.tags.map(t =>\r\n                                <Label tag color=\"violet\" key={t.id}>{t.name}</Label>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </Modal.Content>\r\n                <Modal.Actions>\r\n                    <Button animated onClick={handleFavoriteClicked}>\r\n                    <Button.Content visible>{props.session.isFavorite ? \"Un-Favorite\" : \"Favorite\"}</Button.Content>\r\n                        <Button.Content hidden>\r\n                            <Icon name={props.session.isFavorite ? \"heartbeat\" : \"heart\"} color=\"red\" />\r\n                        </Button.Content>\r\n                    </Button>\r\n                </Modal.Actions>\r\n            </Modal>\r\n        </Transition>\r\n    );\r\n};","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport './semantic/semantic.min.css'\n\nimport Header from './Main/Header';\nimport Body from './Main/Body';\nimport SessionModal from './Main/SessionModal';\nimport axios from 'axios';\nimport { format, getDay, parseISO } from 'date-fns';\n\nfunction App() {\n\n  const [values, setValues] = useState({\n    allSessions: [],\n    tuesday: [],\n    wednesday: [],\n    thursday: [],\n    friday: [],\n    tags: [],\n    isLoading: true\n  });\n\n  const [selectedSession, setSelectedSession] = useState({ tags: [] });\n  const [favorites, setFavorites] = useState([]);\n  const [filter, setFilter] = useState({});\n\n  useEffect(() => {\n    const tuesday = values.tuesday.map(x => ({ ...x, isFavorite: favorites.some(y => y === x.id) ? true : false }))\n      .filter(x => filter.onlyFavorites ? x.isFavorite : true);\n    const wednesday = values.wednesday.map(x => ({ ...x, isFavorite: favorites.some(y => y === x.id) ? true : false }))\n      .filter(x => filter.onlyFavorites ? x.isFavorite : true);\n    const thursday = values.thursday.map(x => ({ ...x, isFavorite: favorites.some(y => y === x.id) ? true : false }))\n      .filter(x => filter.onlyFavorites ? x.isFavorite : true);\n    const friday = values.friday.map(x => ({ ...x, isFavorite: favorites.some(y => y === x.id) ? true : false }))\n      .filter(x => filter.onlyFavorites ? x.isFavorite : true);\n    const allSessions = values.allSessions.map(x => ({ ...x, isFavorite: favorites.some(y => y === x.id) ? true : false }));\n    setValues({ ...values, tuesday, wednesday, thursday, friday, allSessions });\n  }, [favorites]);\n\n  useEffect(() => {\n    const tuesday = !filter.showPrecompilers ? [] : values.allSessions\n      .filter(x => x.day === \"Tuesday\")\n      .filter(x => {\n        if (filter.onlyFavorites && !x.isFavorite) {\n          return false;\n        }\n        return true;\n      })\n      .filter(x => filter.tags.length > 0 ? filter.tags.some(y => x.tags.find(z => z.id === y)) : x);\n    const wednesday = !filter.showPrecompilers ? [] : values.allSessions\n      .filter(x => x.day === \"Wednesday\")\n      .filter(x => {\n        if (filter.onlyFavorites && !x.isFavorite) {\n          return false;\n        }\n        return true;\n      })\n      .filter(x => filter.tags.length > 0 ? filter.tags.some(y => x.tags.find(z => z.id === y)) : x);\n\n    const thursday = values.allSessions\n      .filter(x => x.day === \"Thursday\")\n      .filter(x => {\n        if (filter.onlyFavorites && !x.isFavorite) {\n          return false;\n        }\n        return true;\n      })\n      .filter(x => filter.tags.length > 0 ? filter.tags.some(y => x.tags.find(z => z.id === y)) : x);\n    const friday = values.allSessions\n      .filter(x => x.day === \"Friday\")\n      .filter(x => {\n        if (filter.onlyFavorites && !x.isFavorite) {\n          return false;\n        }\n        return true;\n      })\n      .filter(x => filter.tags.length > 0 ? filter.tags.some(y => x.tags.find(z => z.id === y)) : x);\n\n    setValues({ ...values, tuesday, wednesday, thursday, friday });\n  }, [filter]);\n\n  const getDayName = (num) => {\n    switch (num) {\n      case 1:\n        return \"Monday\";\n      case 2:\n        return \"Tuesday\";\n      case 3:\n        return \"Wednesday\";\n      case 4:\n        return \"Thursday\";\n      case 5:\n        return \"Friday\";\n      case 6:\n        return \"Saturday\";\n      case 7:\n        return \"Sunday\";\n      default:\n        break;\n    }\n  }\n\n  const getLink = () => {\n    navigator.clipboard.writeText(`${document.location.origin.toString()}/codemash2020?favs=${btoa(favorites)}`);\n    alert(\"Link copied to clipboard!\");\n  };\n\n  useEffect(() => {\n    const init = async () => {\n      let favorites = [];\n\n      if (document.cookie !== \"\") {\n        favorites = document.cookie.split(',');\n      }\n\n      if (window.location.search.includes(\"favs\")) {\n        const query = new URLSearchParams(window.location.search);\n        const favsQuery = query.get(\"favs\");\n        favorites = atob(favsQuery).split(',');\n      }\n\n      const result = await axios.get(\"https://sessionize.com/api/v2/p05udyko/view/sessions\");\n\n      let allTags = [];\n\n      const sessions = result.data[0].sessions\n        .filter(x => {\n          return !x.categories.some(y => y.categoryItems.some(z => z.name === \"KidzMash Sessionz\"))\n        })\n        .map(x => {\n          const sessionTags = x.categories.filter(y => y.name === \"Tags\").map(y => y.categoryItems).flat(1);\n          const tagsToAdd = sessionTags.filter(x => !allTags.some(y => y.id === x.id));\n\n          if (tagsToAdd.length > 0)\n            allTags = allTags.concat(tagsToAdd);\n\n          return {\n            id: x.id,\n            day: getDayName(getDay(parseISO(x.startsAt))),\n            time: format(parseISO(x.startsAt), 'h:mm aa'),\n            description: x.description,\n            title: x.title,\n            tags: sessionTags,\n            room: x.room,\n            isFavorite: favorites.some(x => x === x.id),\n            speaker: x.speakers[0].name\n          }\n        });\n\n      setValues({\n        ...values,\n        allSessions: sessions,\n        tuesday: sessions.filter(x => x.day === \"Tuesday\"),\n        wednesday: sessions.filter(x => x.day === \"Wednesday\"),\n        thursday: sessions.filter(x => x.day === \"Thursday\"),\n        friday: sessions.filter(x => x.day === \"Friday\"),\n        tags: allTags,\n        isLoading: false\n      });\n      setFavorites(favorites);\n    }\n    init();\n  }, []);\n\n  const handleFilterChanged = (filter) => {\n    setFilter(filter);\n  };\n\n  const handleFavoritesChanged = (sessionId, closeModal) => {\n    if (favorites.some(x => x === sessionId)) {\n      const newfavorites = [...favorites.filter(x => x !== sessionId)];\n      document.cookie = newfavorites;\n      setFavorites(newfavorites);\n    }\n    else {\n      const newfavorites = [...favorites, sessionId];\n      document.cookie = newfavorites;\n      setFavorites(newfavorites);\n    }\n\n    if (closeModal)\n      handleCloseModal();\n  }\n\n  const handleSessionDetailsClicked = (sessionId) => {\n    setSelectedSession(values.allSessions.find(s => s.id === sessionId));\n    setValues({ ...values, isModalOpen: true });\n  };\n\n  const handleCloseModal = () => {\n    setValues({ ...values, isModalOpen: false });\n  };\n\n  return (\n    <div className=\"App\">\n      <Header\n        handleFilters={handleFilterChanged}\n        handleGetLink={getLink}\n        tags={values.tags.map(x => ({ text: x.name, value: x.id, index: x.id })).sort((a, b) => a.text.toUpperCase() < b.text.toUpperCase() ? -1 : a.text.toUpperCase() > b.text.toUpperCase() ? 1 : 0)}\n      />\n      <Body\n        handleSessionDetailsClicked={handleSessionDetailsClicked}\n        handleFavoritesChanged={handleFavoritesChanged}\n        tuesday={values.tuesday}\n        wednesday={values.wednesday}\n        thursday={values.thursday}\n        friday={values.friday}\n        isLoading={values.isLoading}\n      />\n      <SessionModal\n        session={selectedSession}\n        visible={values.isModalOpen}\n        onClose={handleCloseModal}\n        handleFavoritesChanged={handleFavoritesChanged}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}